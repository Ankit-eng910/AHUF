# Generated by Django 5.2 on 2025-07-12 05:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('street_address', models.CharField(max_length=255)),
                ('apartment', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state_or_region', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('imageUrl', models.CharField(blank=True, max_length=255)),
                ('careated_at', models.DateTimeField(auto_now_add=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComboCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('imageUrl', models.CharField(blank=True, max_length=255)),
                ('for_catering', models.BooleanField(default=False, help_text='Is this combo Category used in catering?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Cashfree Transaction ID')),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_currency', models.CharField(default='INR', max_length=10)),
                ('customer_id', models.CharField(max_length=100)),
                ('customer_phone', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('cart_id', models.CharField(blank=True, max_length=100, null=True)),
                ('address_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trxn_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('order_amount', models.FloatField(blank=True, null=True)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payload', models.JSONField()),
                ('status_at_receive', models.CharField(blank=True, max_length=50, null=True)),
                ('status_time', models.CharField(max_length=1000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('imageUrl', models.CharField(blank=True, max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('avg_reviews', models.FloatField(default=0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('crated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='Ahuf_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='ComboMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('imageUrl', models.CharField(blank=True, max_length=255)),
                ('for_catering', models.BooleanField(default=False, help_text='Is this combo available for catering?')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('avg_reviews', models.FloatField(default=0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combo_menus', to='Ahuf_app.combocategory')),
                ('menu_items', models.ManyToManyField(related_name='combo_menus', to='Ahuf_app.menuitem')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('offer_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('bogo', 'Buy One Get One'), ('free_shipping', 'Free Shipping'), ('custom', 'Custom')], default='percentage', max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='e.g., 10 for 10% or $10', max_digits=10)),
                ('code', models.CharField(blank=True, help_text='Optional coupon code', max_length=50, null=True, unique=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('min_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('usage_limit', models.IntegerField(blank=True, help_text='Max times this offer can be used', null=True)),
                ('per_user_limit', models.IntegerField(blank=True, help_text='Max usage per user', null=True)),
                ('applicable_to', models.CharField(choices=[('all', 'All Items'), ('category', 'Specific Category'), ('menu_item', 'Specific Menu Item'), ('user', 'Specific User(s)')], default='all', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, to='Ahuf_app.category')),
                ('menu_items', models.ManyToManyField(blank=True, to='Ahuf_app.menuitem')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_party_catering', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('applied_offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ahuf_app.offer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ahuf_order_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_currency', models.CharField(default='INR', max_length=10)),
                ('customer_id', models.CharField(max_length=100)),
                ('customer_phone', models.CharField(max_length=15)),
                ('status', models.CharField(default='PENDING', max_length=50)),
                ('order_status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('PREPARING', 'Preparing'), ('OUT_FOR_DELIVERY', 'Out for Delivery'), ('DELIVERED', 'Delivered'), ('CANCELED', 'Canceled')], default='IN_PROGRESS', max_length=100)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_time', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('return_url', models.URLField(blank=True, null=True)),
                ('notify_url', models.URLField(blank=True, null=True)),
                ('order_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('address_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ahuf_app.address')),
                ('cart_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ahuf_app.cart')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occasion', models.CharField(max_length=100)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='Ahuf_app.cart')),
            ],
        ),
        migrations.CreateModel(
            name='PlateOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_type', models.CharField(choices=[('HALF', 'Half Plate'), ('FULL', 'Full Plate')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('discounted_price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plate_options', to='Ahuf_app.menuitem')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='Ahuf_app.category')),
            ],
        ),
        migrations.AddField(
            model_name='menuitem',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='Ahuf_app.subcategory'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('userId', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('crated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=100)),
                ('userCity', models.CharField(max_length=100)),
                ('userState', models.CharField(max_length=100)),
                ('userCountry', models.CharField(max_length=100)),
                ('userlatitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('userlongitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('userpostalCode', models.CharField(blank=True, max_length=50)),
                ('userLoginIp', models.GenericIPAddressField(blank=True, null=True)),
                ('userVerified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('currentUser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='offer',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('created_ist', models.DateTimeField(blank=True, null=True)),
                ('updated_ist', models.DateTimeField(blank=True, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='Ahuf_app.cart')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('cart', 'content_type', 'object_id')},
            },
        ),
    ]
